### 과제1 디자인 시스템을 활용한 공용 컴포넌트 만들기

본문 참조, 기존에 있던 것을 가져다가 쓰는 것이 아닌 스스로 디자인 토큰을 정의하고 반드시 디자인 토큰을 props로 전달 받아야합니다. 디자인 토큰만 전달했을 때 컴포넌트가 생산되도록..!!!

### 과제2 UI 인벤토리 만들기

생성했던 공용 컴포넌트를 스토리북을 활용하여 UI 인벤토리화 해보세요 :}
페이지네이션 컴포넌트를 스토리북을 활용하여 UI 인벤토리화 해세요 :]

### 과제3 다양한 스타일 라이브러리를 활용하여 디자인 시스템 적용하기

본문참조, 다양한 스타일 라이브러리를 활용하여 공용 컴포넌트 만들기

### 과제4 UI 라이브러리 사용하여 컴포넌트 3개씩 사용해보기

story book 공식사이트
https://storybook.js.org/tutorials/intro-to-storybook/react/ko/get-started/

2주차 목표
story book을 활용한 ui inventory 관리, CDD 개념 확립
입력 요소의 유효성 검사와 랜더링 최적화


1-1) 디자인 토큰이란?

디자인 토큰이란 디자인 되어있는 템플릿을 기반으로 설정된 컬러와 자간 등 가장 작은
디자인 요소의 단위를 이야기합니다.

이러한 요소의 단위는 하나의 디자인에서 무한히 재사용될 수 있기 때문에
프론트엔드는 이를 토큰화하여 재사용 할 수 있는 상태로 만들어야합니다.

ex)

const COLORS = {
	GRAY: {
	100: ""
	200: "'
	}
}


===================================================================

1-2) 디자인 시스템 차이

디자인 시스템이란, 디자인 원칙, 재사용 가능한 UI 패턴/컴포넌트, 코드로 구성된 시스템을
이야기합니다. 

즉 간단하게 말하면 디자인 토큰이 적용된 상태에서 재사용 가능한 
UI 패턴과 컴포넌트를 실제 코드로 구현하여 사용 가능한 상태로 만들어내는 것이죠

즉 여러분들이 만들었던 일반적인 컴포넌트는 일반적인 색상만이 지정된 것이 아닌
디자이너가 정해놓은 디자인 토큰 값에 따라 지정된 변수로

저희는 여태까지 디자이너가 없는 환경에서 작업했기 때문에 이러한 디자인 시스템을
임의로 생성하였지만 명확히 디자인 시스템의 차이를 알고 디자이너가 피그마에 적용한
디자인 시스템을 적용한 컴포넌트를 만들어야 해요!

그래야만 저희가 공용 컴포넌트를 만들 때 단순히 사용성이 아닌
앞으로의 디자인에 맞춰 올바른 형태의 컴포넌트를 만들 수 있어요 :)

ex)

사진 첨부

===================================================================

1-3) 디자인 토큰과 공용 컴포넌트 만들어보기

아래의 사진을 바탕으로 아래의 공용 컴포넌트를 5가지 이상 만들어보세요
단 공용 컴포넌트에는 크기, 색상, 폰트 크기등의 디자인 토큰을
props로 전달 받아야합니다.

(1) Select (DropDown)
(2) Input (Text)
(3) Button
...

===================================================================

! 하면 안되는 사항
const Button = ({width, height}) => {
	return ( <button {...{...width, height}></button> )
}


위의 경우는 개발의 편의성을 위해 CSS 중복을 피하기 위한 개발을 위한 컴포넌트일 뿐
디자인 시스템이 적용되어있는 사례가 아닙니다.

디자인 시스템을 적용하기 위해서는 Button의 Size와 같은 디자인 토큰을 Props로
전달 받아야해요 :)
